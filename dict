#!/usr/bin/env perl
use strict;
use warnings;

use utf8;
use Encode;

use Term::ANSIColor qw(:constants);
use File::Which qw(which);

my $search_word = shift or die "Usage: dict search_word";
my $statement_flag = 0;
if ($search_word eq '-s') {
    $search_word = shift;
    $statement_flag = 1;
}

$search_word = Encode::decode_utf8($search_word);

my $dict_path;
if ($search_word =~ m{\A[a-z_\- ]+}i) {
    $dict_path = '/home/syohei/local/dict/eijiro127.sdic';
    unless ($statement_flag) {
        $search_word = "'>${search_word}<'";
    }
} else {
    $dict_path = '/home/syohei/local/dict/waeiji127.sdic';
}
unless (-e $dict_path) {
    die "Dictionary file $dict_path is not existed";
}

unless (which('sary')) {
    die "Please install sary";
}

my @cmd = qq{sary $search_word $dict_path};

open my $pid, '-|', @cmd or die "Can't open process @cmd";
my $output = do {
    local $/;
    Encode::decode_utf8(<$pid>);
};
close $pid;

my $colored  = BOLD . GREEN . UNDERSCORE;
my $reset = RESET;

my $formatted = format_output($output);

print encode_utf8($formatted);

sub format_output {
    my $output = shift;

    $output =~ s{&lf;}{\n}g;
    $output =~ s{&lt;}{<}g;
    $output =~ s{&gt;}{>}g;

    $output =~ s{<K>}{$colored}g;
    $output =~ s{</K>}{$reset\n  }g;

    $output =~ s{<H>}{\n}g;
    $output =~ s{</H>}{\n}g;
    $output =~ s{→}{ => }g;
    $output =~ s{◆}{@ }g;
    $output =~ s{■}{ }g;
    $output =~ s{●}{o }g;
    my $paren = "【";
    $output =~ s{($paren)}{\n    $1}g;

    $output = Encode::encode_utf8($output);
    open my $fh, "<", \$output or die "Can't open output as file";

    my @lines;
    while (my $line = <$fh>) {
        unless ($line =~ m{^\s*$}) {
            push @lines, decode_utf8($line);
        }
    }
    close $fh;

    return join '', @lines;
}
