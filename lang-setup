#!/usr/bin/env python3
import re
import subprocess
import sys
from pathlib import Path


def is_c_like_language(lang: str) -> bool:
    return re.match(r'(?:c|c\+\+|objc)$', lang.lower()) is not None


def is_js_like_language(lang: str) -> bool:
    return re.match(r'(?:|js|node(?:js)|ts|typescript)$', lang.lower()) is not None


def generate_clang_format():
    if Path('.clang-format').exists():
        return

    clang_format = r'''
BasedOnStyle: LLVM
IndentWidth: 4
ColumnLimit: 132
SortIncludes: false
AllowShortFunctionsOnASingleLine: None
AlwaysBreakTemplateDeclarations: true
'''
    with open('.clang-format', 'w', encoding='utf-8') as f:
        f.write(clang_format.lstrip())

    print('Generate .clang-format')


def setup_c(lang: str):
    print(f'Setup for {lang} language')

    generate_clang_format()


def npm_init():
    proc = subprocess.run(['npm', 'init', '-y'])
    if proc.returncode == 0:
        print("Failed 'npm init -y'")
        return

    print('npm init')


def generate_prettier():
    if Path('.prettierrc').exists():
        return

    config = r'''
{
  "semi": false,
  "singleQuote": true,
  "endOfLine": "lf",
  "trailingComma": "all",
  "printWidth": 120,
  "tabWidth": 2
}
'''
    with open('.prettierrc', 'w', encoding='utf-8') as f:
        f.write(config)

    print("Generate .prettierrc")


def setup_js(lang: str):
    if Path('package.json').exists():
        return

    npm_init()
    generate_prettier()


def generate_gitignore(lang):
    if Path('.gitignore').exists():
        return

    proc = subprocess.run(['git-ignore', lang], stdout=subprocess.PIPE)
    if proc.returncode != 0:
        print(f"Cannot generate .gitignore for '{lang}'")
        return

    with open('.gitignore', 'w') as f:
        f.write(proc.stdout.decode('utf-8'))

    print('Generate .gitignore')


def generate_readme_md():
    if Path('README.md').exists():
        return

    print('Generate README.md')
    with open('README.md', 'w') as f:
        f.write('# ')


def main():
    if len(sys.argv) < 2:
        print('Usage: lang-setup language')
        sys.exit(1)

    lang = sys.argv[1]
    if is_c_like_language(lang):
        setup_c(lang)
    elif is_js_like_language(lang):
        setup_js(lang)

    generate_gitignore(lang)
    generate_readme_md()


if __name__ == '__main__':
    main()
